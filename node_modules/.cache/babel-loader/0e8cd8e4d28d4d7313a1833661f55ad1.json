{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Dokument\\\\IT projekt\\\\Kodprover\\\\Kodprov Axis\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBarLogin from \"./Components/Layout/navbarLogin\";\nimport NavBarLogout from \"./Components/Layout/navbarLogout\";\nimport \"./styles.css\";\nimport devices from \"./Sites/devices\";\nimport home from \"./Sites/home\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./Libs/contextLib\";\nimport Login from \"./Components/Auth/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  //the app \n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticating = _useState2[0],\n      setIsAuthenticating = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      userHasAuthenticated = _useState4[1];\n\n  useEffect(function () {\n    onLoad();\n  }, []);\n\n  function onLoad() {\n    return _onLoad.apply(this, arguments);\n  }\n\n  function _onLoad() {\n    _onLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var uri, res, posts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uri = \"http://localhost:3000/users\";\n              _context.next = 3;\n              return fetch(uri);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              posts = _context.sent;\n              posts.map(function (name) {\n                if (name.username === localStorage.username && name.password === localStorage.password) {\n                  userHasAuthenticated(true);\n                }\n\n                setIsAuthenticating(false);\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onLoad.apply(this, arguments);\n  }\n\n  return !isAuthenticating && /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      userHasAuthenticated: userHasAuthenticated\n    },\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(NavBarLogout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/:id\",\n            component: devices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"mbWbL0kNvtECWLCgaPCBS3nUDE4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/src/App.js"],"names":["BrowserRouter","Route","Switch","NavBarLogin","NavBarLogout","devices","home","React","useState","useEffect","AppContext","Login","App","isAuthenticating","setIsAuthenticating","isAuthenticated","userHasAuthenticated","onLoad","uri","fetch","res","json","posts","map","name","username","localStorage","password"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AAD4B,kBAEoBJ,QAAQ,CAAC,IAAD,CAF5B;AAAA;AAAA,MAErBK,gBAFqB;AAAA,MAEHC,mBAFG;;AAAA,mBAGoBN,QAAQ,CAAC,KAAD,CAH5B;AAAA;AAAA,MAGrBO,eAHqB;AAAA,MAGJC,oBAHI;;AAI5BP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAJ4B,WAQbA,MARa;AAAA;AAAA;;AAAA;AAAA,uEAQ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,cAAAA,GADN,GACY,6BADZ;AAAA;AAAA,qBAEoBC,KAAK,CAACD,GAAD,CAFzB;;AAAA;AAEQE,cAAAA,GAFR;AAAA;AAAA,qBAGsBA,GAAG,CAACC,IAAJ,EAHtB;;AAAA;AAGQC,cAAAA,KAHR;AAIEA,cAAAA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAU;AAClB,oBACEA,IAAI,CAACC,QAAL,KAAkBC,YAAY,CAACD,QAA/B,IACAD,IAAI,CAACG,QAAL,KAAkBD,YAAY,CAACC,QAFjC,EAGE;AACAX,kBAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;;AACDF,gBAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,eARD;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAR4B;AAAA;AAAA;;AAsB5B,SACE,CAACD,gBAAD,iBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAfA,eAAF;AAAmBC,MAAAA,oBAAoB,EAApBA;AAAnB,KAA5B;AAAA,cACGD,eAAe,gBACd,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,MAAlB;AAAyB,YAAA,SAAS,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,SAAS,EAAEM;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADc,gBAYd;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAbJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBD;;GA5CuBC,G;;KAAAA,G","sourcesContent":["import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBarLogin from \"./Components/Layout/navbarLogin\";\nimport NavBarLogout from \"./Components/Layout/navbarLogout\";\nimport \"./styles.css\";\nimport devices from \"./Sites/devices\";\nimport home from \"./Sites/home\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./Libs/contextLib\";\nimport Login from \"./Components/Auth/login\";\n\nexport default function App() {\n  //the app \n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    let uri = \"http://localhost:3000/users\";\n    const res = await fetch(uri);\n    const posts = await res.json();\n    posts.map((name) => {\n      if (\n        name.username === localStorage.username &&\n        name.password === localStorage.password\n      ) {\n        userHasAuthenticated(true);\n      }\n      setIsAuthenticating(false);\n    });\n  }\n  return (\n    !isAuthenticating && (\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        {isAuthenticated ? (\n          <BrowserRouter>\n            <div className=\"app\">\n              <NavBarLogout />\n              <Switch>\n                <Route exact path=\"/\" component={home} />\n                <Route exact path=\"/:id\" component={devices} />\n                <Route exact path=\"/login\" component={Login} />\n              </Switch>\n            </div>\n          </BrowserRouter>\n        ) : (\n          <>\n            <Login />\n          </>\n        )}\n      </AppContext.Provider>\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}