{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Dokument\\\\IT projekt\\\\Kodprover\\\\Kodprov Axis\\\\src\\\\Sites\\\\devices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport img1 from \"../Images/axis-M2025.jpg\";\nimport img2 from \"../Images/axis-p1428.jpg\";\nimport img3 from \"../Images/axis-Q6000.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Site1() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theArray = _useState4[0],\n      setTheArray = _useState4[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDevices();\n  }, []);\n\n  function getDevices() {\n    return _getDevices.apply(this, arguments);\n  }\n\n  function _getDevices() {\n    _getDevices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var uri, thisSiteId, res, posts, array;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uri = 'http://localhost:3000/devices';\n              thisSiteId = id;\n              _context.next = 4;\n              return fetch(uri);\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              posts = _context.sent;\n              array = [];\n              posts.map(function (device) {\n                if (device.site_id == thisSiteId) {\n                  array.push(device);\n                }\n              });\n              setTheArray(array);\n              setReady(true);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getDevices.apply(this, arguments);\n  }\n\n  return ready && /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: theArray.map(function (device, index) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"title\",\n            children: device.title\n          }, 4, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"description\",\n            children: device.description\n          }, 5, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"model\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Model: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 5\n            }, _this), \" \", device.model]\n          }, 6, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"version\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Version: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 5\n            }, _this), device.version]\n          }, 7, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"enabled\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Enabled: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 5\n            }, _this), device.enabled ? 'enabled' : 'not enabled']\n          }, 8, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"connected\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Connected: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }, _this), device.connected ? 'connected' : 'not connected']\n          }, 9, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"timezone\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Timezone: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 5\n            }, _this), device.timezone]\n          }, 10, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"storages\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Storages: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }, _this), device.storages.map(function (storage) {\n              return storage.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", storage.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 9\n                }, _this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"State: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 9\n                }, _this), \" \", storage.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 22\n              }, _this) : null;\n            })]\n          }, 10, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 3\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Site1, \"uVNcQ8XSI219Yzc4HXunvvhoVKo=\", false, function () {\n  return [useParams];\n});\n\n_c = Site1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Site1\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/src/Sites/devices.js"],"names":["React","useState","useEffect","Link","useParams","Container","Row","Col","img1","img2","img3","Site1","ready","setReady","theArray","setTheArray","id","getDevices","uri","thisSiteId","fetch","res","json","posts","array","map","device","site_id","push","index","title","description","model","version","enabled","connected","timezone","storages","storage","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from \"react-router\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport img1 from \"../Images/axis-M2025.jpg\";\r\nimport img2 from \"../Images/axis-p1428.jpg\";\r\nimport img3 from \"../Images/axis-Q6000.jpg\";\r\n\r\nexport default function Site1 () {\r\n  const [ready, setReady] = useState(false);\r\n  const [theArray, setTheArray] = useState();\r\n  const { id } = useParams();\r\n  \r\n  useEffect(() => {\r\n    getDevices();\r\n  }, []);\r\n\r\n  async function getDevices() {\r\n    let uri = 'http://localhost:3000/devices';\r\n    let thisSiteId = id;\r\n    const res = await fetch(uri);\r\n    const posts = await res.json();\r\n    let array = []\r\n    posts.map(device =>  {\r\n    if (device.site_id == thisSiteId) {\r\n       array.push(device)\r\n    }     \r\n    })\r\n    setTheArray(array);\r\n    setReady(true);\r\n  }\r\n  return (\r\n    ready && (\r\n\r\n<Container fluid>\r\n  {theArray.map((device, index) => ( \r\n  <Row key={index} >\r\n  <Col>\r\n    <h2 id = \"title\"  key={4}>\r\n    {device.title}\r\n    </h2>\r\n    <p id = \"description\" key={5} >\r\n    {device.description}\r\n    </p>\r\n    <p id = \"model\" key={6}>\r\n    <b>Model: </b> {device.model}\r\n    </p>\r\n    <p id = \"version\" key={7}>\r\n    <b>Version: </b>\r\n    {device.version}\r\n    </p>\r\n    <p id = \"enabled\" key={8}>\r\n    <b>Enabled: </b>\r\n    {device.enabled ? 'enabled' : 'not enabled'}\r\n    </p>\r\n    <p id = \"connected\" key={9}>\r\n    <b>Connected: </b>\r\n    {device.connected ? 'connected' : 'not connected'}\r\n    </p>\r\n    <p id = \"timezone\" key={10}>\r\n    <b>Timezone: </b>\r\n    {device.timezone}\r\n    </p>\r\n    <div id = \"storages\" key={10}>\r\n    <b>Storages: </b>\r\n      {device.storages.map(storage => (\r\n        storage.id ? <p> {storage.id} \r\n        <br></br>\r\n        <b>State: </b> {storage.state}</p> : null))}      \r\n\r\n    </div>\r\n  </Col>\r\n  </Row>\r\n)) }\r\n\r\n \r\n  </Container>       \r\n          \r\n\r\n  ));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}