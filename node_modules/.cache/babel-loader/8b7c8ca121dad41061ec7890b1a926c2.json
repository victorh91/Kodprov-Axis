{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Dokument\\\\IT projekt\\\\Kodprover\\\\Kodprov Axis\\\\src\\\\Sites\\\\devices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport img1 from \"../Images/axis-M2025.jpg\";\nimport img2 from \"../Images/axis-p1428.jpg\";\nimport img3 from \"../Images/axis-Q6000.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Site1() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theArray = _useState4[0],\n      setTheArray = _useState4[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    getDevices();\n  }, []);\n\n  function getDevices() {\n    return _getDevices.apply(this, arguments);\n  }\n\n  function _getDevices() {\n    _getDevices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var uri, thisSiteId, res, posts, array;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uri = 'http://localhost:3000/devices';\n              thisSiteId = id;\n              getUsers();\n              _context.next = 5;\n              return fetch(uri);\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              posts = _context.sent;\n              array = [];\n              posts.map(function (device) {\n                if (device.site_id == thisSiteId) {\n                  array.push(device);\n                }\n              });\n              setTheArray(array);\n              setReady(true);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getDevices.apply(this, arguments);\n  }\n\n  function getUsers() {\n    return _getUsers.apply(this, arguments);\n  }\n\n  function _getUsers() {\n    _getUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var uri, sessionUser, res, sites;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              uri = 'http://localhost:3000/sites';\n              sessionUser = localStorage.username;\n              _context2.next = 4;\n              return fetch(uri);\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 7;\n              return res.json();\n\n            case 7:\n              sites = _context2.sent;\n              sites.map(function (site) {\n                console.log(site.owner);\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getUsers.apply(this, arguments);\n  }\n\n  return ready && /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: theArray.map(function (device, index) {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: [device.id === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img1\n          }, device.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, _this) : null, device.id === 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img2\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }, _this) : null, device.id === 3 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img3\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"title\",\n              children: device.title\n            }, 4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"description\",\n              children: device.description\n            }, 5, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"model\",\n              children: device.model\n            }, 6, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"version\",\n              children: device.version\n            }, 7, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"enabled\",\n              children: device.enabled ? 'enabled' : 'not enabled'\n            }, 8, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"connected\",\n              children: device.connected ? 'connected' : 'not connected'\n            }, 9, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"timezone\",\n              children: device.timezone\n            }, 10, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"storages\",\n              children: device.storages.map(function (storage) {\n                return storage.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", storage.id, \" \", storage.state]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 22\n                }, _this) : null;\n              })\n            }, 10, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 5\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 3\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Site1, \"uVNcQ8XSI219Yzc4HXunvvhoVKo=\", false, function () {\n  return [useParams];\n});\n\n_c = Site1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Site1\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/src/Sites/devices.js"],"names":["React","useState","useEffect","Link","useParams","Container","Row","Col","img1","img2","img3","Site1","ready","setReady","theArray","setTheArray","id","getDevices","uri","thisSiteId","getUsers","fetch","res","json","posts","array","map","device","site_id","push","sessionUser","localStorage","username","sites","site","console","log","owner","index","toString","title","description","model","version","enabled","connected","timezone","storages","storage","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from \"react-router\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport img1 from \"../Images/axis-M2025.jpg\";\r\nimport img2 from \"../Images/axis-p1428.jpg\";\r\nimport img3 from \"../Images/axis-Q6000.jpg\";\r\n\r\nexport default function Site1 () {\r\n  const [ready, setReady] = useState(false);\r\n  const [theArray, setTheArray] = useState();\r\n  const { id } = useParams();\r\n  \r\n  useEffect(() => {\r\n    getDevices();\r\n  }, []);\r\n\r\n  async function getDevices() {\r\n    let uri = 'http://localhost:3000/devices';\r\n    let thisSiteId = id;\r\n    getUsers();\r\n    const res = await fetch(uri);\r\n    const posts = await res.json();\r\n    let array = []\r\n    posts.map(device =>  {\r\n    if (device.site_id == thisSiteId) {\r\n       array.push(device)\r\n    }     \r\n    })\r\n    setTheArray(array);\r\n    setReady(true);\r\n  }\r\n\r\n  async function getUsers() {\r\n    let uri = 'http://localhost:3000/sites';\r\n    const sessionUser = localStorage.username;\r\n    const res = await fetch(uri);\r\n    const sites = await res.json();\r\n    sites.map(site =>  {\r\n      console.log(site.owner)\r\n     \r\n\r\n  })\r\n}\r\n  return (\r\n    ready && (\r\n\r\n<Container>\r\n  <Row>\r\n  {theArray.map((device, index) => ( \r\n  <Col>\r\n    {device.id === 1 ? <img key={device.id} src={img1}></img> : null}\r\n    {device.id === 2 ? <img key={index.toString()} src={img2}></img> : null}\r\n    {device.id === 3 ? <img key={index.toString()} src={img3}></img> : null}\r\n    <div>\r\n    <h2 id = \"title\"  key={4}>\r\n    {device.title}\r\n    </h2>\r\n    <p id = \"description\"key={5} >\r\n    {device.description}\r\n    </p>\r\n    <p id = \"model\" key={6}>\r\n    {device.model}\r\n    </p>\r\n    <p id = \"version\" key={7}>\r\n    {device.version}\r\n    </p>\r\n    <p id = \"enabled\" key={8}>\r\n    {device.enabled ? 'enabled' : 'not enabled'}\r\n    </p>\r\n    <p id = \"connected\" key={9}>\r\n    {device.connected ? 'connected' : 'not connected'}\r\n    </p>\r\n    <p id = \"timezone\" key={10}>\r\n    {device.timezone}\r\n    </p>\r\n    <div id = \"storages\" key={10}>\r\n      {device.storages.map(storage => (\r\n        storage.id ? <p> {storage.id} {storage.state}</p> : null))}      \r\n    </div>\r\n    </div>\r\n  </Col>\r\n)) }\r\n\r\n  </Row>\r\n  </Container>       \r\n          \r\n\r\n  ));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}