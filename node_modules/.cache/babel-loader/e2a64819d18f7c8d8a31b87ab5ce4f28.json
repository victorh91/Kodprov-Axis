{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Dokument\\\\IT projekt\\\\Kodprover\\\\Kodprov Axis\\\\src\\\\Components\\\\Auth\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../../Libs/contextLib\";\nimport Alert from \"react-bootstrap/Alert\";\nimport logo from \"../../Images/axis.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  //the login page\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useAppContext = useAppContext(),\n      userHasAuthenticated = _useAppContext.userHasAuthenticated;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var history = useHistory();\n\n  function validateForm() {\n    //form validation\n    return username.length > 0 && password.length > 0;\n  }\n\n  function AlertDismissible() {\n    //gives the user an error message if the login fails\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: function onClose() {\n          return setShow(false);\n        },\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: [\"You have entered incorrect login information.\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), !show && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return setShow(true);\n        },\n        children: \"Show Alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true);\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //submit function\n              event.preventDefault();\n              storeAndUpdate();\n              history.push(\"/\");\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var storeAndUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var uri, res, posts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              /*authenticate the user based on localstorage and db credentials \r\n              and set the values for localstorage if succeded*/\n              uri = \"http://localhost:3000/users\";\n              _context.next = 3;\n              return fetch(uri);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              posts = _context.sent;\n              posts.map(function (credentials) {\n                if (credentials.username === username && credentials.password === password) {\n                  localStorage.username = username;\n                  localStorage.password = password;\n                  userHasAuthenticated(true);\n                } else {\n                  setShow(true);\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function storeAndUpdate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [show && /*#__PURE__*/_jsxDEV(AlertDismissible, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      id: \"logoAxis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"username\",\n          value: username,\n          onChange: function onChange(e) {\n            return setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        action: \"/\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"blAmfFJbj0l8nFlYEVoLmSvnmgQ=\", false, function () {\n  return [useAppContext, useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Dokument/IT projekt/Kodprover/Kodprov Axis/src/Components/Auth/login.js"],"names":["React","useState","Form","Button","useHistory","useAppContext","Alert","logo","Login","username","setUsername","password","setPassword","userHasAuthenticated","show","setShow","history","validateForm","length","AlertDismissible","handleSubmit","event","preventDefault","storeAndUpdate","push","uri","fetch","res","json","posts","map","credentials","localStorage","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../../Libs/contextLib\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport logo from \"../../Images/axis.png\";\r\n\r\nexport default function Login() {\r\n  //the login page\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [show, setShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function validateForm() {\r\n    //form validation\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n  function AlertDismissible() {\r\n    //gives the user an error message if the login fails\r\n    return (\r\n      <>\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>\r\n            You have entered incorrect login information.{\" \"}\r\n          </Alert.Heading>\r\n          <p>Please try again</p>\r\n        </Alert>\r\n\r\n        {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    //submit function\r\n    event.preventDefault();\r\n    storeAndUpdate();\r\n    history.push(\"/\");\r\n  }\r\n  const storeAndUpdate = async () => {\r\n    /*authenticate the user based on localstorage and db credentials \r\n    and set the values for localstorage if succeded*/\r\n    let uri = \"http://localhost:3000/users\";\r\n    const res = await fetch(uri);\r\n    const posts = await res.json();\r\n    posts.map((credentials) => {\r\n      if (\r\n        credentials.username === username &&\r\n        credentials.password === password\r\n      ) {\r\n        localStorage.username = username;\r\n        localStorage.password = password;\r\n        userHasAuthenticated(true);\r\n      } else {\r\n        setShow(true);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      {show && <AlertDismissible />}\r\n      <img src={logo} id=\"logoAxis\" />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          block\r\n          size=\"lg\"\r\n          action=\"/\"\r\n          type=\"submit\"\r\n          disabled={!validateForm()}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}